{"mappings":"AAAO,MAAMA,EAAO,CAClBC,KAAMC,SAASC,cAAc,qBAC7BC,UAAWF,SAASC,cAAc,gBAClCE,WAAYH,SAASC,cAAc,qBACnCG,cAAeJ,SAASC,cAAc,wBACtCI,cAAeL,SAASC,cAAc,oBACtCK,YAAaN,SAASC,cAAc,kBACpCM,QAASP,SAASC,cAAc,YAChCO,aAAcR,SAASS,iBAAiB,kBACxCC,gBAAiBV,SAASC,cAAc,YACxCU,WAAYX,SAASC,cAAc,iBACnCW,WAAYZ,SAASC,cAAc,iBACnCY,WAAYb,SAASC,cAAc,mBCqCrC,WACE,MAAMa,EAAeC,IACnBC,WAAaD,EAAME,cAAchB,cAAc,OAAOiB,QAAQC,KAC9DnB,SAASoB,KAAKC,UAAUC,OAAO,YAI/BC,QAAQC,IAAI,yCAA2CR,YA0B3D,WACE,MAAMS,EAAmBV,IACnBA,EAAMW,QAAUX,EAAME,gBACxBjB,SAASoB,KAAKC,UAAUC,OAAO,YAC/BxB,EAAKa,WAAWgB,oBAAoB,QAASC,GAC7C9B,EAAKY,gBAAgBiB,oBAAoB,QAASF,G,EAIhDG,EAAcb,IAClBf,SAASoB,KAAKC,UAAUC,OAAO,YAC/BxB,EAAKY,gBAAgBiB,oBAAoB,QAASF,GAClD3B,EAAKa,WAAWgB,oBAAoB,QAASC,EAAW,EAG1D9B,EAAKY,gBAAgBmB,iBAAiB,QAASJ,GAE/C3B,EAAKa,WAAWkB,iBAAiB,QAASD,E,CA1CxCE,EAAa,GAGfhC,EAAKU,aAAeR,SAASS,iBAAiB,mBAE5BsB,SACfC,IACCA,EAAQH,iBAAiB,QAASf,EAAY,G,CA5DpDmB,GAEAnC,EAAKC,KAAK8B,iBAAiB,SAAUd,IACnCA,EAAMmB,iBACNlC,SAASoB,KAAKe,UAAY,eAI1BZ,QAAQC,IAAI,uBAAuB,IAGrC1B,EAAKK,WAAW0B,iBAAiB,SAAUd,IACzCA,EAAMmB,iBACNlC,SAASoB,KAAKC,UAAUe,QAAQ,UAAW,QAI3Cb,QAAQC,IAAI,uBAAuB,IAGrC1B,EAAKM,cAAcyB,iBAAiB,SAAUd,IAC5CA,EAAMmB,iBACNlC,SAASoB,KAAKC,UAAUe,QAAQ,OAAQ,WAIxCb,QAAQC,IAAI,kCAAkC,IAGhD1B,EAAKO,cAAcwB,iBAAiB,SAAS,KAC3C7B,SAASoB,KAAKC,UAAUe,QAAQ,QAAS,WAIzCb,QAAQC,IAAI,kCAAkC,IAGhD1B,EAAKQ,YAAYuB,iBAAiB,SAAS,KACzC7B,SAASoB,KAAKC,UAAUe,QAAQ,UAAW,SAI3Cb,QAAQC,IAAI,gCAAgC,IA4D9C1B,EAAKc,WAAWiB,iBAAiB,SAAS,KAExCN,QAAQC,IAAI,uBAAuB,IAGrC1B,EAAKe,WAAWgB,iBAAiB,SAAS,KAExCN,QAAQC,IAAI,kBAAkB,IAOhC,WACE1B,EAAKU,aAAeR,SAASS,iBAAiB,kBAE9C,IAAI4B,EAAYrC,SAASC,cAAc,kBACnCqC,EAAU,IACTtC,SAASuC,YAAYC,iBAAiBH,EAAUI,eAAeC,KAEpEJ,EAAUK,SAAS,GAAGL,EAAQ,KAAKA,EAAQ,MAC3C,IAAIM,EAAW,GACbC,KAAKC,KAAKT,EAAUU,wBAAwBC,QAAUV,MAGxD,MAWMW,EAAW,IAAIC,sBAXJC,IACfA,EAAgBpB,SAAQ,EAACL,OAAEA,EAAM0B,eAAEA,MACf,GAIlB,GAGoB,CAAEC,KAAM,KAAMC,WAAYV,IAIlD9C,EAAKU,aAAauB,SAASC,IACzBiB,EAASM,UAAUvB,GACnBiB,EAASO,QAAQxB,EAAQ,G,CAI7ByB","sources":["src/js/refs.js","src/index.js"],"sourcesContent":["export const refs = {\n  logo: document.querySelector(\".navigation__logo\"),\n  searchBox: document.querySelector(\".search__box\"),\n  homeButton: document.querySelector(\".navigation__home\"),\n  libraryButton: document.querySelector(\".navigation__library\"),\n  watchedButton: document.querySelector(\".button__watched\"),\n  queueButton: document.querySelector(\".button__queue\"),\n  gallery: document.querySelector(\".gallery\"),\n  galleryCards: document.querySelectorAll(\".gallery__card\"),\n  modalBackground: document.querySelector(\".overlay\"),\n  modalClose: document.querySelector(\".modal__close\"),\n  modalWatch: document.querySelector(\".modal__watch\"),\n  modalQueue: document.querySelector(\".modal__queue\"),\n};\n","import { refs } from \"./js/refs\";\n\n// Initial gallery population function goes here\n\nmodalListener();\n\nrefs.logo.addEventListener(\"click\", (event) => {\n  event.preventDefault();\n  document.body.className = \"home watched\";\n\n  //Gallery population function for this page goes here\n\n  console.log(\"Populating Home page\");\n});\n\nrefs.homeButton.addEventListener(\"click\", (event) => {\n  event.preventDefault();\n  document.body.classList.replace(\"library\", \"home\");\n\n  //Gallery population function for this page goes here\n\n  console.log(\"Populating Home page\");\n});\n\nrefs.libraryButton.addEventListener(\"click\", (event) => {\n  event.preventDefault();\n  document.body.classList.replace(\"home\", \"library\");\n\n  //Gallery population function for this page goes here\n\n  console.log(\"Populating Library Watched page\");\n});\n\nrefs.watchedButton.addEventListener(\"click\", () => {\n  document.body.classList.replace(\"queue\", \"watched\");\n\n  //Gallery population function for this page goes here\n\n  console.log(\"Populating Library Watched page\");\n});\n\nrefs.queueButton.addEventListener(\"click\", () => {\n  document.body.classList.replace(\"watched\", \"queue\");\n\n  //Gallery population function for this page goes here\n\n  console.log(\"Populating Library Queue page\");\n});\n\nfunction modalListener() {\n  const modalOpener = (event) => {\n    dataSource = event.currentTarget.querySelector(\"img\").dataset.page;\n    document.body.classList.toggle(\"modal-on\");\n\n    // Modal population function goes here. Don't forget the spinner.\n\n    console.log(\"Get your link to data for modal here: \" + dataSource);\n    modalCloser();\n  };\n\n  refs.galleryCards = document.querySelectorAll(\".gallery__card\");\n\n  refs.galleryCards.forEach(\n    (element) => {\n      element.addEventListener(\"click\", modalOpener);\n    }\n\n    // For reasons unfathomable (array change?) JS doesn't want to remove event\n    // listeners through the same algorithm. It is not crucial as the cards will be\n    // loaded anew with each page change and will loose all their event listeners\n    // and observers. If it really is that important you can use this simple trick:\n    // element.replaceWith(element.cloneNode(true))\n  );\n}\n\n// Honestly see no reason to remove Event Listeners\n// They could be added at the start of the session\n// and they would stay on for the remainder.\n// My personal belief: adding and removing listeners\n// is more taxing on CPu than just letting them stay on.\n// But whatever. Here's the function:\n\nfunction modalCloser() {\n  const backgroundClose = (event) => {\n    if (event.target == event.currentTarget) {\n      document.body.classList.toggle(\"modal-on\");\n      refs.modalClose.removeEventListener(\"click\", crossClose);\n      refs.modalBackground.removeEventListener(\"click\", backgroundClose);\n    }\n  };\n\n  const crossClose = (event) => {\n    document.body.classList.toggle(\"modal-on\");\n    refs.modalBackground.removeEventListener(\"click\", backgroundClose);\n    refs.modalClose.removeEventListener(\"click\", crossClose);\n  };\n\n  refs.modalBackground.addEventListener(\"click\", backgroundClose);\n\n  refs.modalClose.addEventListener(\"click\", crossClose);\n}\n\n// And here are modal button listeners that will stay on\n// for the remainder of the session. And nothing bad will\n// happen. I prefer this way better.\n\nrefs.modalWatch.addEventListener(\"click\", () => {\n  // Watch list update function goes here\n  console.log(\"Adding to watch list\");\n});\n\nrefs.modalQueue.addEventListener(\"click\", () => {\n  // Queue update function goes here\n  console.log(\"Adding to queue\");\n});\n\n// Lazy load below. It currently doesn't work as Parcel works\n// in mysterious ways. Will work with external image links though.\n// Meanwhile the main script has been commented out.\n\nfunction lazyLoad() {\n  refs.galleryCards = document.querySelectorAll(\".gallery__card\");\n\n  var firstItem = document.querySelector(\".gallery__card\");\n  var itemGap = [\n    ...document.defaultView.getComputedStyle(firstItem.parentElement).gap,\n  ];\n  itemGap = parseInt(`${itemGap[0]}${itemGap[1]}`);\n  var itemSize = `${\n    Math.ceil(firstItem.getBoundingClientRect().height) + itemGap\n  }px`;\n\n  const onEntry = (observerEntries) => {\n    observerEntries.forEach(({ target, isIntersecting }) => {\n      if (isIntersecting) {\n        // let source = target.firstElementChild.dataset.source;\n        // target.firstElementChild.src = source;\n      }\n    });\n  };\n\n  const observerOptions = { root: null, rootMargin: itemSize };\n\n  const observer = new IntersectionObserver(onEntry, observerOptions);\n\n  refs.galleryCards.forEach((element) => {\n    observer.unobserve(element);\n    observer.observe(element);\n  });\n}\n\nlazyLoad();\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","logo","document","querySelector","searchBox","homeButton","libraryButton","watchedButton","queueButton","gallery","galleryCards","querySelectorAll","modalBackground","modalClose","modalWatch","modalQueue","modalOpener","event","dataSource","currentTarget","dataset","page","body","classList","toggle","console","log","backgroundClose","target","removeEventListener","crossClose","addEventListener","$1f0dc3b9307be026$var$modalCloser","forEach","element","$1f0dc3b9307be026$var$modalListener","preventDefault","className","replace","firstItem","itemGap","defaultView","getComputedStyle","parentElement","gap","parseInt","itemSize","Math","ceil","getBoundingClientRect","height","observer","IntersectionObserver","observerEntries","isIntersecting","root","rootMargin","unobserve","observe","$1f0dc3b9307be026$var$lazyLoad"],"version":3,"file":"index.6baeb3b3.js.map"}